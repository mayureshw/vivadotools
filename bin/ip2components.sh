#!/usr/bin/env bash

# Script to extract ip component declarations into the package

IPSRCDIR=ipsrc

if [ $# -lt 1 ]
then
    echo "Usage: `basename $0` <ipname>" >&2
    exit 1
fi

IPNAME=`basename $1 .ip`

VHOFILE=$IPSRCDIR/$IPNAME/$IPNAME.vho
VEOFILE=$IPSRCDIR/$IPNAME/$IPNAME.veo

vho2comp()
{
    awk '
    /\<COMP_TAG_END\>/ { exit }
    /\<COMP_TAG\>/ { PRT=1; next }
    PRT==1 { print }
    ' $1
}

veo2comp()
{
    sed 's/^ *\..*\/\///' $1 |
    awk '
    function dtstr(s)
    {
        gsub("[][]","",s)
        gsub(":"," downto ",s)
        return s
    }
    BEGIN {
        print "-- WARNING: generated by veo2comp utility which is experimental"
        }
    /INST_TAG/ { PRT=1; next }
    PRT!=1 { next }
    /\);$/ {
        print "deletesemicolon"
        print;
        print "end component;"
        exit
        }
    /\($/ {
        print "component " $1
        print "    port ("
        next
        }
    /^ *\/\// {
        gsub("//","--")
        print
        next
        }
    /^ *$/ { print; next }
        {
            portname = $NF
            portdir = $1
            porttyp = ( NF==2 ) ? "std_logic" : "std_logic_vector(" dtstr($2) ")"
            gsub( "put" , "" , portdir )
            print "        " portname , ":", portdir, porttyp ";"
        }
    ' |
    awk '
    /^deletesemicolon/ {
        gsub(";$","",LASTLINE)
        print(LASTLINE)
        LASTLINE=""
        next
        }
        {
        if ( LASTLINE!="" ) print LASTLINE
        LASTLINE = $0
        }
    END {
        if ( LASTLINE!="") print LASTLINE
        }
    '
}

if [ -f $VHOFILE ]
then
    vho2comp $VHOFILE
elif [ -f $VEOFILE ]
then
    veo2comp $VEOFILE
else
    echo "Neither vhdl nor verilog template found :" $VHOFILE $VEOFILE >&2
    echo "Run make $IPSRCDIR/$IPNAME/$IPNAME.xci beforehand to generate it" >&2
    exit 1
fi
