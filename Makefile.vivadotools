# Instructions to use
#
# Set following environment variables (see error messages below for more explanation)
#  - VIVADOTOOLSDIR
#  - VIVADOINSTALLDIR
#
# In your application make flile (see examples/Makefile)
#  - Define variable PACKAGE (make sure to not hand write $PACKAGE.vhdl, as it will be overwritten)
#  - Define variable SRCS (excluding $PACKAGE.vhdl and xdc files)
#  - Optionally define variable XDCSRCS (.xdc files)
#  - Define variable TOP
#  - Define variable PARTNAME (optional)
#  - Tune the UNISIMSDIR variable in this file if different from the default
#  - include this Makefile
#
# To include types in the package define type declarations in ${PACKAGE}_types.vhdl
# and do not include this file in SRCS
#
# To include package body in the package define package body in ${PACKAGE}_pbody.vhdl
# and do not include this file in SRCS
#
# Run make with one of the supported targets. Running without target will show
# supported targets.

ifndef VIVADOTOOLSDIR
$(error Please set environment variable VIVADOTOOLSDIR to point to vivadotools directory)
endif

ifndef VIVADOINSTALLDIR
$(error Please set environment variable VIVADOINSTALLDIR to point to vivado installation directory up to vivado version, e.g. /opt/xilinx/Vivado/2022.2)
endif

ifndef SRCS
$(error In your Makefile define variable SRCS to include all .v, .vhdl, .xdc source files)
endif

ifndef TOP
$(error In your Makefile define variable TOP to identify the top module)
endif

VIVADOTOOLSBINDIR	=	$(VIVADOTOOLSDIR)/bin

export	PATH			:=	$(VIVADOTOOLSBINDIR):$(VIVADOINSTALLDIR)/bin:$(PATH)

SRCS_W_PKG	=	$(PACKAGE).vhdl $(SRCS)
SRCS_W_XDC	=	$(SRCS_W_PKG) $(XDCSRCS)

TYPESFILE	=	$(PACKAGE)_types.vhdl
PBODYFILE	=	$(PACKAGE)_pbody.vhdl

GHDLOPTS	=	--std=08 -frelaxed-rules
UNISIMSDIR	=	/opt/xilinx/Vivado/2022.2/data/vhdl/src/unisims
UNISIMOBJS	=	unisim-obj08.cf
GHDLOBJS	=	$(SRCS_W_PKG:.vhdl=.o)

%.o:	%.vhdl
	ghdl -a $(GHDLOPTS) $<


# Unfortunately no checkpoint representation for "elaboration" step
# So we start targets from synth
all:
	@echo "Please specify target: synth|place|route|bit|bit2hw|clean|dcpclean|package|ghdl"

synth: $(TOP).synth.dcp
place: $(TOP).place.dcp
route: $(TOP).route.dcp
bit: $(TOP).bit
package: $(PACKAGE).vhdl

$(TOP).synth.dcp:	$(SRCS_W_XDC)
	SRCS="$(SRCS_W_XDC)" TOP=$(TOP) PARTNAME=$(PARTNAME) vivsh $(VIVADOTOOLSBINDIR)/synth.tcl

$(TOP).place.dcp:	$(TOP).synth.dcp
	TOP=$(TOP) vivsh $(VIVADOTOOLSBINDIR)/place.tcl

$(TOP).route.dcp:	$(TOP).place.dcp
	TOP=$(TOP) vivsh $(VIVADOTOOLSBINDIR)/route.tcl

$(TOP).bit:	$(TOP).route.dcp
	TOP=$(TOP) vivsh $(VIVADOTOOLSBINDIR)/bit.tcl

bit2hw:	$(TOP).bit
	TOP=$(TOP) vivsh $(VIVADOTOOLSBINDIR)/bit2hw.tcl

$(PACKAGE).vhdl:	$(SRCS) $(TYPESFILE) $(PBODYFILE)
	$(VIVADOTOOLSBINDIR)/vhdl2components.sh $(PACKAGE) $(SRCS) > $@

# In case these files are absent don't treat it as an error
$(TYPESFILE):
$(PBODYFILE):

clean:
	rm -rf *.jou *.log .Xil

dcpclean:
	rm -f *.dcp *.bit

ghdl:	$(TOP) $(UNISIMOBJS)

$(UNISIMOBJS):
	ghdl -i $(GHDLOPTS) --work=unisim $(UNISIMSDIR)/unisim*.vhd
	ghdl -i $(GHDLOPTS) --work=unisim $(UNISIMSDIR)/primitive/*.vhd

$(TOP):	$(GHDLOBJS)
	ghdl -m $(GHDLOPTS) $(TOP)
